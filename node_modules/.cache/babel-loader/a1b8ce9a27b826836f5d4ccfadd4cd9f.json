{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-basic-master\\\\src\\\\pages\\\\views\\\\Admin\\\\Products\\\\EditProducts.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\nconst EditProduct = ({\n  products,\n  onUpdate,\n  cate\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  let product = products.find(data => data.id == id);\n  const [currentProduct, setCurrentProduct] = useState(product);\n  console.log(currentProduct);\n\n  const onSubmit = e => {\n    onUpdate(currentProduct);\n    history.push(\"/admin/products\");\n  };\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentProduct({ ...currentProduct,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: currentProduct.name,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Danh m\\u1EE5c\"), /*#__PURE__*/React.createElement(\"select\", {\n    type: \"text\",\n    name: \"cate_id\",\n    className: \"form-control\",\n    onChange: onHandleChange,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, cate && cate.map(({\n    id,\n    name\n  }, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"\\u1EA2nh s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: currentProduct.image,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), errors.image && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Gi\\xE1 s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    value: currentProduct.price,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), errors.price && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 38\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"M\\xF4 t\\u1EA3 s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"detail\",\n    value: currentProduct.detail,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), errors.detail && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 39\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"C\\u1EADp nh\\u1EADt\")));\n};\n\nEditProduct.propTypes = {\n  products: PropTypes.array\n};\nexport default EditProduct;","map":{"version":3,"sources":["D:/react-basic-master/src/pages/views/Admin/Products/EditProducts.js"],"names":["React","useState","PropTypes","useParams","useHistory","useForm","EditProduct","products","onUpdate","cate","register","handleSubmit","errors","id","history","product","find","data","currentProduct","setCurrentProduct","console","log","onSubmit","e","push","onHandleChange","name","value","target","required","map","index","image","price","detail","propTypes","array"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n    const EditProduct = ({ products, onUpdate, cate }) => {\r\n        const { register, handleSubmit, errors } = useForm();\r\n        let { id } = useParams();\r\n        let history = useHistory();\r\n        let product = products.find((data) => data.id == id);\r\n        const [currentProduct, setCurrentProduct] = useState(product);\r\n        console.log(currentProduct);\r\n        const onSubmit = (e) => {\r\n            onUpdate(currentProduct);\r\n            history.push(\"/admin/products\");\r\n        };\r\n        const onHandleChange = (e) => {\r\n            const { name, value } = e.target;\r\n            setCurrentProduct({\r\n            ...currentProduct,\r\n            [name]: value\r\n            });\r\n        };\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={handleSubmit(onSubmit)} className=\"w-50\" >\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">Tên sản phẩm</label>\r\n                    <input type=\"text\" name=\"name\" value={currentProduct.name} onChange = {onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                    {errors.name && <span>This field is required</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Danh mục</label>\r\n                        <select type=\"text\" name=\"cate_id\" className=\"form-control\"\r\n                        onChange={onHandleChange} \r\n                        ref={register({ required: true })}>\r\n                            {cate && cate.map(({ id, name }, index) => (\r\n                                <option value={id}>{name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">Ảnh sản phẩm</label>\r\n                    <input type=\"text\" name=\"image\" value={currentProduct.image} onChange = {onHandleChange} className=\"form-control\" ref={register({ required: true })}/>\r\n                    {errors.image && <span>This field is required</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">Giá sản phẩm</label>\r\n                    <input type=\"text\" name=\"price\" value={currentProduct.price} onChange = {onHandleChange} className=\"form-control\" ref={register({ required: true })}/>\r\n                    {errors.price && <span>This field is required</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">Mô tả sản phẩm</label>\r\n                    <input type=\"text\" name=\"detail\" value={currentProduct.detail} onChange = {onHandleChange} className=\"form-control\" ref={register({ required: true })}/>\r\n                    {errors.detail && <span>This field is required</span>}\r\n                </div>\r\n                <button className=\"btn btn-primary\">Cập nhật</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nEditProduct.propTypes = {\r\n    products: PropTypes.array\r\n}\r\nexport default EditProduct"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-basic-master\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport dataFake from './dataFake';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n  const [status, setStatus] = useState(false);\n  const [color, setColor] = useState('green');\n\n  const onHandleClick = () => {\n    // setStatus(true);\n    setColor('red');\n  };\n\n  const onHandleRemove = id => {\n    const newProducts = products.filter(product => product.id !== id);\n    setProducts(newProducts);\n  };\n\n  const onHandleAdd = product => {\n    const newProduct = {\n      id: products.length + 1,\n      ...product\n    };\n    setProducts([...products, newProduct]);\n  };\n\n  const onHandleEdit = (id, value_edit) => {\n    const newProducts = [...products];\n    newProducts.forEach((element, index) => {\n      if (element.id == id) newProducts.splice(index, 1);\n    });\n    setProducts([...newProducts, value_edit]);\n  };\n\n  const onHandleUpdate = updateProduct => {\n    const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('products', JSON.stringify(newProducts));\n    setProducts(newProducts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react-basic-master/src/App.js"],"names":["React","useState","dataFake","Routers","apiRequest","BrowserRouter","Router","Switch","Route","Link","App","products","setProducts","useEffect","getProducts","data","getAll","error","console","log","status","setStatus","color","setColor","onHandleClick","onHandleRemove","id","newProducts","filter","product","onHandleAdd","newProduct","length","onHandleEdit","value_edit","forEach","element","index","splice","onHandleUpdate","updateProduct","map","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport dataFake from './dataFake';\nimport Routers from './routers'\nimport apiRequest from './api/productApi'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n\n  },\n   []);\n  const [status, setStatus] = useState(false);\n  const [color, setColor] = useState('green');\n  const onHandleClick = () => {\n    // setStatus(true);\n    setColor('red');\n  }\n  const onHandleRemove = (id) => {\n    const newProducts = products.filter(product => product.id !== id);\n    setProducts(newProducts);\n  }\n  const onHandleAdd = (product) => {\n    const newProduct = {\n      id: products.length + 1,\n      ...product\n    }\n    setProducts([\n      ...products,\n      newProduct\n    ])\n  }\n  const onHandleEdit = (id, value_edit) => {\n    const newProducts = [...products];\n    newProducts.forEach((element, index) => {\n      if (element.id == id) newProducts.splice(index, 1);\n    });\n    setProducts([...newProducts, value_edit]);\n  };\n  const onHandleUpdate = (updateProduct) => {\n    const newProducts = products.map(product => (\n      product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    ));\n    localStorage.setItem('products', JSON.stringify(newProducts))\n    setProducts(newProducts);\n  }\n  return (\n    <div className=\"App\">\n      <Routers products={products} onRemove={onHandleRemove} onAdd={onHandleAdd} onUpdate={onHandleUpdate}/>\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}
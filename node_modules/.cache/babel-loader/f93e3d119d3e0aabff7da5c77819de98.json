{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-basic-master\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport dataFake from './dataFake';\nimport Routers from './routers';\nimport { Router } from 'react-router-dom';\n\nfunction App() {\n  const [products, setProducts] = useState(dataFake);\n  const [status, setStatus] = useState(false);\n  const [color, setColor] = useState('green');\n\n  const onHandleClick = () => {\n    // setStatus(true);\n    setColor('red');\n  };\n\n  const onHandleRemove = id => {\n    const newProducts = products.filter(product => product.id !== id);\n    setProducts(newProducts);\n  };\n\n  const onHanleAdd = product => {\n    const newProduct = {\n      id: products.length + 1,\n      ...product\n    };\n    setProducts([...products, newProduct]);\n  };\n\n  const onHandleEdit = (id, value_edit) => {\n    const newProducts = [...products];\n    newProducts.forEach((element, index) => {\n      if (element.id == id) newProducts.splice(index, 1);\n    });\n    setProducts([...newProducts, value_edit]);\n  };\n\n  const onHandleUpdate = updateProduct => {\n    const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('products', JSON.stringify(newProducts));\n    setProducts(newProducts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHanleAdd,\n    onUpdate: onHandleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react-basic-master/src/App.js"],"names":["React","useState","dataFake","Routers","Router","App","products","setProducts","status","setStatus","color","setColor","onHandleClick","onHandleRemove","id","newProducts","filter","product","onHanleAdd","newProduct","length","onHandleEdit","value_edit","forEach","element","index","splice","onHandleUpdate","updateProduct","map","localStorage","setItem","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACC,QAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMW,aAAa,GAAG,MAAM;AAC1B;AACAD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAHD;;AAIA,QAAME,cAAc,GAAIC,EAAD,IAAQ;AAC7B,UAAMC,WAAW,GAAGT,QAAQ,CAACU,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeA,EAA1C,CAApB;AACAP,IAAAA,WAAW,CAACQ,WAAD,CAAX;AACD,GAHD;;AAIA,QAAMG,UAAU,GAAID,OAAD,IAAa;AAC9B,UAAME,UAAU,GAAG;AACjBL,MAAAA,EAAE,EAAER,QAAQ,CAACc,MAAT,GAAkB,CADL;AAEjB,SAAGH;AAFc,KAAnB;AAIAV,IAAAA,WAAW,CAAC,CACV,GAAGD,QADO,EAEVa,UAFU,CAAD,CAAX;AAID,GATD;;AAUA,QAAME,YAAY,GAAG,CAACP,EAAD,EAAKQ,UAAL,KAAoB;AACvC,UAAMP,WAAW,GAAG,CAAC,GAAGT,QAAJ,CAApB;AACAS,IAAAA,WAAW,CAACQ,OAAZ,CAAoB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtC,UAAID,OAAO,CAACV,EAAR,IAAcA,EAAlB,EAAsBC,WAAW,CAACW,MAAZ,CAAmBD,KAAnB,EAA0B,CAA1B;AACvB,KAFD;AAGAlB,IAAAA,WAAW,CAAC,CAAC,GAAGQ,WAAJ,EAAiBO,UAAjB,CAAD,CAAX;AACD,GAND;;AAOA,QAAMK,cAAc,GAAIC,aAAD,IAAmB;AACxC,UAAMb,WAAW,GAAGT,QAAQ,CAACuB,GAAT,CAAaZ,OAAO,IACtCA,OAAO,CAACH,EAAR,KAAec,aAAa,CAACd,EAA7B,GAAkCc,aAAlC,GAAkDX,OADZ,CACqB;AADzC,KAApB;AAGAa,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAelB,WAAf,CAAjC;AACAR,IAAAA,WAAW,CAACQ,WAAD,CAAX;AACD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAET,QAAnB;AAA6B,IAAA,QAAQ,EAAEO,cAAvC;AAAuD,IAAA,KAAK,EAAEK,UAA9D;AAA0E,IAAA,QAAQ,EAAGS,cAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAOD;;AACD,eAAetB,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport dataFake from './dataFake';\nimport Routers from './routers'\nimport { Router } from 'react-router-dom';\n\nfunction App() {\n\n  const [products, setProducts] = useState(dataFake);\n  const [status, setStatus] = useState(false);\n  const [color, setColor] = useState('green');\n  const onHandleClick = () => {\n    // setStatus(true);\n    setColor('red');\n  }\n  const onHandleRemove = (id) => {\n    const newProducts = products.filter(product => product.id !== id);\n    setProducts(newProducts);\n  }\n  const onHanleAdd = (product) => {\n    const newProduct = {\n      id: products.length + 1,\n      ...product\n    }\n    setProducts([\n      ...products,\n      newProduct\n    ])\n  }\n  const onHandleEdit = (id, value_edit) => {\n    const newProducts = [...products];\n    newProducts.forEach((element, index) => {\n      if (element.id == id) newProducts.splice(index, 1);\n    });\n    setProducts([...newProducts, value_edit]);\n  };\n  const onHandleUpdate = (updateProduct) => {\n    const newProducts = products.map(product => (\n      product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    ));\n    localStorage.setItem('products', JSON.stringify(newProducts))\n    setProducts(newProducts);\n  }\n  return (\n    <div className=\"App\">\n      <Routers products={products} onRemove={onHandleRemove} onAdd={onHanleAdd} onUpdate= {onHandleUpdate} />\n\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}